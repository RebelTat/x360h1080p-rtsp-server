name: C/C++ CI
env:
  isReleaseCandidate: ${{ contains(github.ref, '-rc') }}

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Add ARM architecture to APT
      run: sudo dpkg --add-architecture armhf

    - name: Setup APT repositories for ARM
      run: sudo mv sources.list /etc/apt/sources.list

    - name: Update APT repositories
      run: sudo apt-get update

    - name: Install ARM cross compiler
      run: sudo apt-get -y install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

    - name: Install dependencies
      run: sudo apt-get -y install libssl-dev:armhf

    - name: Generate makefiles for ARM
      run: ./genMakefiles armlinux2

    - name: Compile
      run: make

    - name: Release (pre-release)
      if: isReleaseCandidate
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: rtspserver/rtspserver
        prerelease: true
        
    - name: Update latest-rc tag
      if: isReleaseCandidate
      uses: EndBug/latest-tag@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag-name: latest-rc

    - name: Release (release)
      uses: softprops/action-gh-release@v1
      if: ${{ !isReleaseCandidate }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: rtspserver/rtspserver
        
    - name: Update latest tag
      if: ${{ !isReleaseCandidate }}
      uses: EndBug/latest-tag@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag-name: latest
